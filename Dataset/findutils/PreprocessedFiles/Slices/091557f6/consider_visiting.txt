static void
consider_visiting(FTS *p, FTSENT *ent)
{
  if (options.debug_options & DebugSearch)
  if (ent->fts_info == FTS_DP)
  else if (ent->fts_level > prev_depth || ent->fts_level==0)
      left_dir();
  inside_dir(p->fts_cwd_fd);
  prev_depth = ent->fts_level;
  if (ent->fts_info == FTS_ERR
      || ent->fts_info == FTS_DNR)
  else if (ent->fts_info == FTS_DC)
  else if (ent->fts_info == FTS_SLNONE)
  if (ent->fts_info == FTS_NSOK)
      state.have_stat = true;
      state.have_type = true;
      statbuf = *(ent->fts_statp);
      state.type = mode = statbuf.st_mode;
  if (mode)
      if (!digest_mode(mode, ent->fts_path, ent->fts_name, &statbuf, 0))
  ignore = 0;
  isdir = S_ISDIR(statbuf.st_mode)
    || (FTS_D  == ent->fts_info)
    || (FTS_DP == ent->fts_info)
    || (FTS_DC == ent->fts_info);
  if (isdir && (ent->fts_info == FTS_NSOK))
  if (options.maxdepth >= 0)
  if ( (ent->fts_info == FTS_D) && !options.do_dir_first )
  else if ( (ent->fts_info == FTS_DP) && options.do_dir_first )
  else if (ent->fts_level < options.mindepth)
  if (!ignore)
      visit(p, ent, &statbuf);
  if (state.execdirs_outstanding)
  if (ent->fts_info == FTS_DP)
}
