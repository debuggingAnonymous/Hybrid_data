find 

{

  char * arglist[2];

  int ftsoptions;

  FTS *p;

  FTSENT *ent;





  arglist[0] = arg;

  arglist[1] = ((void *)0);



  ftsoptions = 0x0008;

  switch (options.symlink_handling)

    {

    case SYMLINK_ALWAYS_DEREF:

      ftsoptions |= 0x0001|0x0002;

      break;



    case SYMLINK_DEREF_ARGSONLY:

      ftsoptions |= 0x0001|0x0010;

      break;



    case SYMLINK_NEVER_DEREF:

      ftsoptions |= 0x0010;

      break;

    }



  if (options.stay_on_filesystem)

    ftsoptions |= 0x0040;



  p = fts_open(arglist, ftsoptions, ((void *)0));

  if (((void *)0) == p)

    {

      error (0, (*__errno_location ()),

      gettext ("cannot search %s"),

      quotearg_n_style(0, locale_quoting_style, arg));

    }

  else

    {

      while ( (ent=fts_read(p)) != ((void *)0) )

 {

   state.have_stat = 0;

   state.have_type = 0;

   state.type = 0;



   consider_visiting(p, ent);

 }

      fts_close(p);

      p = ((void *)0);

    }

}

