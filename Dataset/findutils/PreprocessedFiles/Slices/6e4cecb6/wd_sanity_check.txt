wd_sanity_check 

{

  const char *fstype;

  char *specific_what = ((void *)0);

  int silent = 0;



  *changed = 0;



  if ((*options.xstat) (".", newinfo) != 0)

    error (1, (*__errno_location ()), "%s", thing_to_stat);



  if (old_dev != newinfo->st_dev)

    {

      *changed = 1;

      specific_what = specific_dirname(what);

      fstype = filesystem_type(newinfo);

      silent = fs_likely_to_be_automounted(fstype);











      if (TraversingDown == direction)

 {







   isfatal = RETRY_IF_SANITY_CHECK_FAILS;



 }



      switch (isfatal)

 {

 case FATAL_IF_SANITY_CHECK_FAILS:

   {

     fstype = filesystem_type(newinfo);

     error (1, 0,

     gettext ("%s%s changed during execution of %s (old device number %ld, new device number %ld, filesystem type is %s) [ref %ld]"),

     specific_what,

     parent ? "/.." : "",

     program_name,

     (long) old_dev,

     (long) newinfo->st_dev,

     fstype,

     line_no);



     return 0;

   }



 case NON_FATAL_IF_SANITY_CHECK_FAILS:

   {











     free(specific_what);

     return 1;

   }



 case RETRY_IF_SANITY_CHECK_FAILS:

   return 0;

 }

    }





  if (old_ino != newinfo->st_ino)

    {

      *changed = 1;

      specific_what = specific_dirname(what);

      fstype = filesystem_type(newinfo);



      error ((isfatal == FATAL_IF_SANITY_CHECK_FAILS) ? 1 : 0,

      0,

      gettext ("%s%s changed during execution of %s (old inode number %ld, new inode number %ld, filesystem type is %s) [ref %ld]"),

      specific_what,

      parent ? "/.." : "",

      program_name,

      (long) old_ino,

      (long) newinfo->st_ino,

      fstype,

      line_no);

      free(specific_what);

      return 0;

    }



  return 1;

}

