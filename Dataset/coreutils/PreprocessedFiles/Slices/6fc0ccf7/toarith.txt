toarith 

{

  switch (v->type)

    {

    case integer:

      return true;

    case string:

      {

	intmax_t value = 0;

	char *cp = v->u.s;

	int sign = (*cp == '-' ? -1 : 1);



	if (sign < 0)

	  cp++;



	do

	  {

	    if (ISDIGIT (*cp))

	      {

		intmax_t new_v = 10 * value + sign * (*cp - '0');

		if (0 < sign

		    ? (INTMAX_MAX / 10 < value || new_v < 0)

		    : (value < INTMAX_MIN / 10 || 0 < new_v))

		  error (EXPR_FAILURE, 0,

			 (0 < sign

			  ? _("integer is too large: %s")

			  : _("integer is too small: %s")),

			 quotearg_colon (v->u.s));

		value = new_v;

	      }

	    else

	      return false;

	  }

	while (*++cp);



	free (v->u.s);

	v->u.i = value * sign;

	v->type = integer;

	return true;

      }

    default:

      abort ();

    }

}

